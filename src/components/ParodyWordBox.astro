---
interface Props {
  mask?: string
  allowTab?: boolean
}

const { mask = '#555555', allowTab = false }: Props = Astro.props
---

<parody-word mask={mask} allow-tab={allowTab}>
  <slot />
</parody-word>
<script>
  class ParodyWord extends HTMLElement {
    static get observedAttributes() {
      return ['mask', 'allow-tab']
    }

    constructor() {
      super()
      this.attachShadow({ mode: 'open' })
      this.render()
      this.updateTabIndex()
    }

    connectedCallback() {
      this.updateMaskColor()
    }

    attributeChangedCallback(name: string) {
      if (name === 'mask') {
        this.updateMaskColor()
      } else if (name === 'allow-tab') {
        this.updateTabIndex()
      }
    }

    updateTabIndex() {
      if (this.getAttribute('allow-tab') === 'false') {
        this.tabIndex = -1
      } else if (!this.hasAttribute('tabindex')) {
        this.tabIndex = 0
      }
    }

    render() {
      if (!this.shadowRoot) {
        return
      }
      const style = `
        :host {
            display: inline-block;
            position: relative;
            cursor: pointer;
        }

        :host([active]) #mask {
            opacity: 0;
        }

        :host(:hover) #mask,
        :host(:focus) #mask,
        :host(:active) #mask {
            opacity: 0;
        }

        #mask {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            transition: opacity 0.25s ease;
            z-index: 1;
        }

        ::slotted(*) {
            position: relative;
            z-index: 0;
        }
                `

      this.shadowRoot.innerHTML = `<style>${style}</style><slot></slot><div id="mask"></div>`
    }

    updateMaskColor() {
      const maskColor = this.getAttribute('mask') || '#555555'
      const maskElement = this.shadowRoot?.getElementById('mask')
      if (maskElement) {
        maskElement.style.background = maskColor
      }
    }
  }
  customElements.define('parody-word', ParodyWord)
</script>
