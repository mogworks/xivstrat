---
import type { CombinedRoleType, RoleType } from '@/lib/role'

import { cn } from '@/lib/utils'

import Action from '@/components/Action.astro'

import icon from '@/assets/action/31399.png'
import RoleIcon from '@/components/RoleIcon.astro'
import EntityText from '@/components/EntityText.astro'

type OperationType =
  | 'mul'
  | 'div'
  | 'divSlash'
  | 'plus'
  | 'minus'
  | 'eq'
  | 'neq'
  | 'lt'
  | 'gt'
  | 'gte'
  | 'lte'
  | 'approxEq'
interface Props {
  class?: string
  actionClass?: string
  role?: RoleType | CombinedRoleType
  stage?: 1 | 2 | 3 | 'full'
  operation?: OperationType
}

const operationMap: Record<OperationType, string> = {
  mul: '×',
  div: '÷',
  divSlash: '/',
  plus: '+',
  minus: '-',
  eq: '=',
  neq: '≠',
  approxEq: '≈',
  lt: '<',
  gt: '>',
  gte: '≥',
  lte: '≤',
}

const { actionClass = '', class: className = '', operation = 'mul', role, stage }: Props = Astro.props
---

<div class={cn('relative inline-flex', className)} data-icon="standard-icon">
  {role && <RoleIcon role={role} class="relative -bottom-2 left-2.5 z-10 -ml-3" />}
  <Action icon={icon} name="极限技" class={actionClass} />

  <div
    class="-ml-0.5 inline-flex items-center rounded-sm rounded-l-none border-1 border-l-0 border-[#E4C78B] bg-gradient-to-r from-amber-400 to-amber-600 pr-1.5 pl-2.5 text-sm font-semibold text-white dark:border-[#6E2913] dark:from-amber-500 dark:to-amber-700"
  >
    {stage === 'full' && <span>全部&nbsp;</span>}
    <span class="mr-px">LB</span>
    {
      stage && stage !== 'full' && (
        <>
          <span class="text-white">{operationMap[operation]}</span>
          <span class="ml-px">{stage}</span>
        </>
      )
    }
  </div>
</div>
<EntityText class={cn('relative inline-flex font-bold', className)}>
  {role && <RoleIcon role={role} />}
  {stage === 'full' && <span>全部</span>}
  <span>LB</span>
  {stage && stage !== 'full' && <span>{operationMap[operation] + stage}</span>}
</EntityText>
