---
import '@/styles/global.css'
import Navigation from '@/components/navigator/Navigation.vue'
import { getCollection, getEntries } from 'astro:content'
import type { Route } from '@/components/navigator/type'
import { findOrCreateRouteNode } from '@/lib/utils'

interface Props {
  lang?: string
  title?: string
  description?: string
}

const defaultTitle = 'XivStrat | 最终幻想14中文攻略站'
const defaultDescription = '从7.2开始的最终幻想14中文攻略站'
const keywords = [
  // Generated
  'FF14',
  '最终幻想14',
  'FFXIV',
  'FF14攻略',
  '最终幻想14攻略',
  'FF14端游',
  '最终幻想14端游',
  'FF14攻略站',
  'FF14中文攻略站',
  'FF14零式',
  'FF14副本',
  'FF14机制图解',
  '最终幻想14零式',
  '副本机制图解',
  'FF14战术',
  '苏帕酱噗',
  'xivstrat',
  '莫古力工坊',
  'MMW攻略组',
  '高难副本',
  '中文游戏攻略',
  '玩家社区',
  '艾欧泽亚',
  '零式开荒',
  '绝本攻略',
  'FF14高难',
  '副本时间轴',
  '时间轴攻略',
  '零式副本',
  '零式首周',
  'FF14国服',
  '国际服攻略',
  'FF14攻略组',
  '攻略协作',
  '副本攻略',
  '机制教学',
  'FF14宏',
  '副本站位',
  '时间轴练习',
  '零式通关',
  '阿卡狄亚',
]
const { lang = 'zh-CN', title = defaultTitle, description = defaultDescription }: Props = Astro.props

const dutyGroups = await getCollection('dutyGroups')
const staticRoutes: Route[] = [
  { name: '首页', path: '/' },
  { name: '关于', path: '/about' },
]
const dutyRoutes = await (async () => {
  const list: Route[] = []
  await new Promise((resolve) => {
    dutyGroups.forEach(async (group, index) => {
      const groupData = group.data
      const groupName = groupData.group
      const routeItem = {
        name: groupName,
        children: await (async () => {
          const duties = await getEntries(groupData.duties)
          const rootRoutes: Route[] = []
          for (const duty of duties) {
            const dutyData = duty.data

            if (!dutyData.indexAvailable) {
              continue
            }

            const leafName = dutyData.navigationInfo?.name ?? dutyData.name
            const parentHierarchy = dutyData.navigationInfo?.parent || [] // 父层路径数组

            let currentLevel: Route[] = rootRoutes

            // 按 parent 层级顺序创建目录节点
            try {
              for (const dirName of parentHierarchy) {
                const dirNode = findOrCreateRouteNode(currentLevel, dirName)
                if (!dirNode.children) dirNode.children = []
                currentLevel = dirNode.children
              }

              const leafNode: Route = { name: leafName, path: dutyData.href }

              if (currentLevel.some((n) => n.name === leafName)) {
                throw new Error(`节点 '${leafName}' 在当前层级已存在`)
              }
              currentLevel.push(leafNode)
            } catch (e: any) {
              console.error(`[${groupName}] 添加节点失败`, e.message)
            }
          }
          return rootRoutes
        })(),
      }
      list.push(routeItem)
      if (index === dutyGroups.length - 1) {
        resolve(true)
      }
    })
  })
  return list.filter((item) => !item.children || (item.children && item.children.length > 0))
})()
const routes: Route[] = [...staticRoutes, ...dutyRoutes]
---

<!doctype html>
<html lang={lang}>
  <head>
    <title>{title?.trim() === defaultTitle ? defaultTitle : `${title} - XivStrat`}</title>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <meta name="keywords" content={keywords.join(',')} />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <script is:inline src="/scripts/initTheme.min.js"></script>
  </head>
  <body>
    <slot />
    <Navigation client:load routes={routes} />
  </body>
</html>

<script>
  import { init } from '@/stores/theme'

  init()
</script>
