---
import type { Time } from '@/lib/utils'

import Badge from '@/components/Badge.astro'
import CastSection from '@/components/section/CastSection.astro'
import DamageInfo from '@/components/DamageInfo.astro'
import CollapseSection from '@/components/section/CollapseSection.astro'
import Span from '@/components/Span.vue'

import BruteAbombinator from '../_components/BruteAbombinator.astro'
import BrutalImpactActivate from '../_components/BrutalImpactActivate.astro'

import { translations } from '../_translations'

interface Props {
  start: Time
  activateTimes: Time[]
}

const { start, activateTimes }: Props = Astro.props
const toln = activateTimes.length
const brutalImpact = translations.brutalImpact
---

<CastSection start={start} duration={4.7} ability={brutalImpact} target>
  <BruteAbombinator slot="source" />
  <DamageInfo damage={`57000×${toln}`} type="physical" />
  <Badge variant="purple">AoE×{toln}</Badge>
</CastSection>
<CollapseSection>
  <Fragment slot="summary">
    <BruteAbombinator />
    连续释放<Span variant="pink">{toln}</Span>次AoE，每轮伤害
    <DamageInfo damage="57000" type="physical" />
    <Badge variant="purple">AoE</Badge>
  </Fragment>
  <Fragment slot="details">
    {
      activateTimes.map((activateTime, i) => {
        return <BrutalImpactActivate time={activateTime} num={i + 1} />
      })
    }
  </Fragment>
</CollapseSection>
